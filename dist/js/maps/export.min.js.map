{"version":3,"names":[],"mappings":"","sources":["export.js"],"sourcesContent":["'use strict'\n\nconst { Notification } \t= require('electron')\nconst path \t\t\t\t= require('path')\nconst dialog \t\t\t= require('electron').dialog\nconst fs \t\t\t\t= require( 'fs-extra' )\nconst log \t\t\t\t= require( 'electron-log' )\nconst Store \t\t\t= require( 'electron-store' )\nconst bookmarks\t\t\t= new Store( {name: 'bookmarks'} )\n\n\n\nmodule.exports.exportBookmarks = function( filePath ) {\n\t\n\tlet exportname \t\t= path.basename( filePath ),\n\t\texportpath \t\t= path.dirname( filePath ),\n\t\tbookmarkdata \t= bookmarks.get( 'data' )\n\t\n\tlet output =\n`<!DOCTYPE NETSCAPE-Bookmark-file-1>\n<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=UTF-8\">\n<TITLE>Bookmarks</TITLE>\n<H1>Bookmarks</H1>\n<DL><p>`\n\t\n\t\n\tfor ( let item of bookmarkdata ) {\n\t\t\n\t\tlet tagList = item.tags.toString()\n\t\t\t\n\t\toutput +=\n`\n<DT><A HREF=\"${item.url}\" TAGS=\"${tagList}\">${item.title}</A>`\n\t\t\n\t\tif( item.description ) {\n\t\t\t\n\t\t\toutput += `<DD>${item.description}`\n\t\t}\n\t}\n\t\n\t\n\tfs.outputFile( filePath, output )\n\n\t.then(() => fs.readFile( filePath, 'utf8') )\n\t\n\t.then(data => {\n\t\t\n\t\tlet exportNotification = new Notification({\n\t\t\t\n\t\t\ttitle: \t\t`Export Successful`,\n\t\t\tsubtitle: \t`the file: ${exportname}`,\n\t\t\tbody: \t\t`has been saved to: ${exportpath}`\n\t\t})\n\t\t\n\t\texportNotification.onclick = () => {\n\t\t\t\n\t\t\texportProcess.close()\n\t\t}\n\t\t\n\t\texportNotification.show()\n\t})\n\t\n\t.catch(error => {\n\t\t\n\t\tlog.error( error )\n\t\t\n\t\tdialog.showErrorBox(\n\t\t\t`Export Error`,\n\t\t\t`An error occured exporting:\\n${filePath}`\n\t\t)\n\t})\n}\n"],"file":"../export.min.js"}