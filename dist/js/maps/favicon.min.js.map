{"version":3,"names":[],"mappings":"","sources":["favicon.js"],"sourcesContent":["'use strict'\n\nconst {\n\tapp,\n\tBrowserWindow,\n\tNotification\n\n} = require( 'electron' )\n\nconst path \t\t\t= require( 'path' )\nconst fs \t\t\t= require( 'fs-extra' )\nconst nativeImage \t= require( 'electron' ).nativeImage\nconst axios \t\t= require( 'axios' ).default\nconst Store\t\t\t= require( 'electron-store' )\nconst store \t\t= new Store()\nconst log  \t\t\t= require( 'electron-log' )\n\nconst dir \t\t\t= store.get( 'dirPath' )\n//const defaultIcon \t= path.join( __dirname, '../assets/png/' )\n\n\n\nmodule.exports.regenerate = function ( winId ) {\n\t\n\tlog.info( `regenerating favicons` )\n\t\n\tnotify( app.name, 'Regenerating all favicons' )\n\tstore.set( 'defaultIcons', [] )\n\t\n\t// fs.remove( `${dir}/favicons/`, err => {\n\t// \t\n\t// \tif ( err ) return console.error( err )\n\t// \t\n\t// \tlog.info( `deleted cached favicons` )\n\t// \tmodule.exports.generate( winId )\n\t// })\n}\n\n\n\nfunction notify( title, body ) {\n\t\n\tconst note ={\n\t\ttitle: title,\n\t\tbody: body\n\t}\n\t\n\tnew Notification( note ).show()\n}\n\n\nmodule.exports.generate = function ( winId ) {\n\t\n\tlet win \t\t\t= BrowserWindow.fromId( winId ),\n\t\tbookmarks \t\t= new Store( {name: 'bookmarks'} ),\n\t\tbookmarkData \t= bookmarks.get( 'data' ),\n\t\tdefaultArray\t= store.get( 'defaultIcons' ),\n\t\tdefaultIcons \t= [],\n\t\tfaviconCount \t= 0,\n\t\tfaviconArray\t= []\n\t\n\tfor( let  bookmark of bookmarkData ) {\n\t\t\n\t\tif( !defaultArray.includes( bookmark.id ) &&\n\t\t\t!fs.pathExistsSync( `${dir}/favicons/${bookmark.id}.png`\n\t\t) ) {\n\t\t\t\n\t\t\tfaviconArray.push( bookmark )\n\t\t}\n\t}\n\t\n\tlet arrayLength = faviconArray.length\n\t\n\tif( arrayLength < 1 ) {\n\t\t\n\t\tlog.info( `No favicons to generate` )\n\t\tlog.info( `Default favicons are: ${defaultArray}` )\n\t\twin.webContents.send( 'load-tray-menu' )\n\t}\n\t\n\tfor( let i = 0; i < arrayLength; i++ ) {\n\t\t\n\t\tlet bookmarkUrl = new URL( faviconArray[i].url ),\n\t\t\tdomain \t\t= bookmarkUrl.hostname,\n\t\t\ticonurl \t= `https://api.faviconkit.com/${domain}/32`,\n\t\t\tfile \t\t= `${dir}/favicons/${faviconArray[i].id}.png`,\n\t\t\tfile2x\t\t= `${dir}/favicons/${faviconArray[i].id}@2x.png`\n\t\t\n\t\taxios.get(iconurl,  { responseType: 'arraybuffer' })\n\t\t.then( function( response ) {\n\t\t\t\n\t\t\tconst buffer = Buffer.from(response.data, \"utf-8\")\n\t\t\t\n\t\t\tif(\n\t\t\t\tresponse.headers['content-type'].includes('png') ||\n\t\t\t\tresponse.headers['content-type'].includes('jpeg') ||\n\t\t\t\tresponse.headers['content-type'].includes('x-icon')\n\t\t\t) {\n\t\t\t\t\n\t\t\t\tlet imgpng = nativeImage.createFromBuffer(buffer, {\n\t\t\t\t\t\t\n\t\t\t\t\t\tscaleFactor: 1.0\n\t\t\t\t\t}).resize({\n\t\t\t\t\t\twidth: 16,\n\t\t\t\t\t\theight: 16,\n\t\t\t\t\t\tquality: 'best'\n\t\t\t\t\t}).toPNG()\n\t\t\t\t\n\t\t\t\tlet imgpng2x = nativeImage.createFromBuffer(buffer, {\n\t\t\t\t\t\t\n\t\t\t\t\t\tscaleFactor: 1.0\n\t\t\t\t\t}).resize({\n\t\t\t\t\t\twidth: 32,\n\t\t\t\t\t\theight: 32,\n\t\t\t\t\t\tquality: 'best'\n\t\t\t\t\t}).toPNG()\n\t\t\t\t\n\t\t\t\tfs.outputFileSync(file, imgpng, err => {\n\t\t\t\t\t\n\t\t\t\t\tif(err) log.info(err)\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tfs.outputFileSync(file2x, imgpng2x, err => {\n\t\t\t\t\t\n\t\t\t\t\tif(err) log.info(err)\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tlog.info(faviconArray[i].id)\n\t\t\t\t\n\t\t\t\tfaviconCount++\n\t\t\t\tif( faviconCount === arrayLength ) {\n\t\t\t\t\t\n\t\t\t\t\tgeneratedFavicons( win, faviconCount, defaultIcons )\n\t\t\t\t\twin.webContents.send( 'load-tray-menu', '' )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfaviconFallback( bookmarkData[i].id, bookmarkUrl, file, file2x, function( theDefault ) {\n\t\t\t\t\t\n\t\t\t\t\tlog.info(faviconArray[i].id)\n\t\t\t\t\t\n\t\t\t\t\tif( theDefault ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefaultIcons.push( theDefault )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfaviconCount++\n\t\t\t\t\tif( faviconCount === arrayLength ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeneratedFavicons( win, faviconCount, defaultIcons )\n\t\t\t\t\t\twin.webContents.send( 'load-tray-menu', '' )\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t.catch( function( err ) {\n\t\t\t\n\t\t\tlog.info( `favicon error: ${faviconArray[i].id}: ${err.message}` )\n\t\t\t\n\t\t\tfaviconFallback( bookmarkData[i].id, bookmarkUrl, file, file2x, function( theDefault ) {\n\t\t\t\t\n\t\t\t\tlog.info(faviconArray[i].id)\n\t\t\t\t\n\t\t\t\tif( theDefault ) {\n\t\t\t\t\t\n\t\t\t\t\tdefaultIcons.push( theDefault )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfaviconCount++\n\t\t\t\tif( faviconCount === arrayLength ) {\n\t\t\t\t\t\n\t\t\t\t\tgeneratedFavicons( win, faviconCount, defaultIcons )\n\t\t\t\t\twin.webContents.send( 'load-tray-menu', '' )\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n}\n\n\n\nmodule.exports.get = function ( id ) {\n\t\n\tif( fs.pathExistsSync( `${dir}/favicons/${id}.png` ) ) {\n\t\t\n\t\treturn `${dir}/favicons/${id}.png`\n\t\t\n\t} else {\n\t\t\n\t\treturn path.join(__dirname, '../assets/png/faviconTemplate.png') \n\t}\n}\n\n\n\nmodule.exports.exists = function ( id ) {\n\t\n\treturn ( fs.pathExistsSync( `${dir}/favicons/${id}.png` ) ) ? true : false\n}\n\n\n\nfunction faviconFallback( id, url, file, file2x, callback ) {\n\t\n\tlet iconurl = 'https://www.google.com/s2/favicons?sz=32&domain_url=' + url,\n\ttheDefault = null\n\n\taxios.get(iconurl,  { responseType: 'arraybuffer' })\n\t.then( function( response ) {\n\t\t\n\t\tconst buffer = Buffer.from(response.data, \"utf-8\")\n\t\t\n\t\tlet imgpng = nativeImage.createFromBuffer(buffer, {\n\t\t\t\t\n\t\t\t\tscaleFactor: 1.0\n\t\t\t}).resize({\n\t\t\t\twidth: 16,\n\t\t\t\theight: 16,\n\t\t\t\tquality: 'best'\n\t\t\t}).toPNG()\n\t\t\n\t\tlet imgpng2x = nativeImage.createFromBuffer(buffer, {\n\t\t\t\t\n\t\t\t\tscaleFactor: 1.0\n\t\t\t}).resize({\n\t\t\t\twidth: 32,\n\t\t\t\theight: 32,\n\t\t\t\tquality: 'best'\n\t\t\t}).toPNG()\n\t\t\n\t\tlet b64enc = Buffer.from(imgpng, 'binary').toString('base64')\n\t\t\n\t\tif( isNotDefaultIcon( b64enc ) ) {\n\t\t\t\n\t\t\tfs.outputFileSync(file, imgpng, err => {\n\t\t\t\t\n\t\t\t\tif (err) log.info(err)\n\t\t\t})\n\t\t\t\n\t\t\tfs.outputFileSync(file2x, imgpng2x, err => {\n\t\t\t\t\n\t\t\t\tif (err) log.info(err)\n\t\t\t})\n\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttheDefault = id\n\t\t}\n\t\t\n\t\tcallback( theDefault )\n\t})\n\t.catch( function( err ) {\n\t\t\n\t\tlog.info( `fallback favicon error: ${id}: ${err.message}` )\n\t})\n}\n\n\n\nfunction generatedFavicons( win, count, defaults ) {\n\t\n\tlog.info( `Generated ${count} favicons` )\n\tstore.set( 'defaultIcons', defaults )\n\t\n\twin.webContents.send( 'load-tray-menu', '' )\n}\n\n\n\nfunction isNotDefaultIcon( b64 ) {\n\t\n\treturn ( b64 === 'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACs0lEQVQ4jaWTzU8bBxDFf7V31/baXn+sP2oDduxaCZFKqiKDEDSHKKLKiRs55JCPQ070zyGHinsrxbk0kXpBqsTBKQUbqa1AUCgFk0C8trv2YrNm1y69gJWoveWdZqR5b97MaOAj8clVMD//3FO1apGZfHbCtnoLetPMt4yuD0Dxu9uhoKckuYRnxdL+elyK1guF++ZAYH7+uadt68nc9fjTdud8LpdRY6lsWLXsPpLoJJNSWV7ebhxUdE3xSy/3/qgt+cTQcaFw3xQAqlYt8sWNoadnZu/B57cSI5m0ileWGB8bpnNmkU4qZFMR9fftY/W778u+XC7Kr7snz4AjB8BMPjthtLtzTx5NjGTSKgCW3Wd143Awa0yVEUUnjx9OjrQ653Mz+ewEgAPAOu8tXBsJxaa+TA0Itt3HtvuEAjIAHbNHs2USCnhIDYVi3a69MBDQm2Z+dnZU7Zi9DzZ896vrKF4BAK9H4MZnMfYrf3Pv3k1V1808gADQMkxfPKKgeAW8ssRwIshwIjggAzgdUK2fAhCPKBiG6Rs4APDKEgBT49d4c9LEsj90cwVRdAJwcZkLV3fer9SVRDSF4hX4+naOYrnCzmVRNhUhEZW5M5Wh3uyy86eG4ne3Bw7CIbm0vLzdeL/T2GgSrd5Gq7dZ3Thg7bdjACJBN69ebTbCQbk0EBBFYfGgomvFcuV/bQO8PWnS/weK5QrH1ZbmcouLAE4AR2C6k04GAz//cpiOfqoEUskALsmBKIpol4sbG02ys6/x7dLro6Df9aK0efTD4c6PhhNg8tZj+12tsZtIKNLr1QO1tHHkcPtccrN1xolmYJx2WVnZa/y0snsY9Lte7O3VlsKSWt3aKvT+80zT49n8uWV/o+tm3jjt+i4uLlD87rYaltdlt7C4VvqrHHjvmT4a/wJLYRPRy3Z+JAAAAABJRU5ErkJggg==' ) ? false : true\n}\n"],"file":"../favicon.min.js"}