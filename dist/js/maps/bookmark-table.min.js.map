{"version":3,"names":[],"mappings":"","sources":["bookmark-table.js"],"sourcesContent":["'use strict'\n\nconst i18n\t\t= require( './i18n.min' )\n\nconst Store\t\t= require( 'electron-store' )\nconst store\t\t= new Store()\nconst $\t\t\t= require( 'jquery' )\nconst dt\t\t= require( 'datatables.net' )( window, $ )\nconst keytable\t= require( 'datatables.net-keytable' )( window, $ )\n\n\n\n$.fn.dataTable.render.ellipsis = function ( cutoff, wordbreak, escapeHtml ) {\n\tvar esc = function ( t ) {\n\t\treturn t\n\t\t\t.replace( /&/g, '&amp;' )\n\t\t\t.replace( /</g, '&lt;' )\n\t\t\t.replace( />/g, '&gt;' )\n\t\t\t.replace( /\"/g, '&quot;' )\n\t};\n\n\treturn function ( d, type, row ) {\n\t\t// Order, search and type get the original data\n\t\tif ( type !== 'display' ) {\n\t\t\treturn d\n\t\t}\n\n\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\treturn d\n\t\t}\n\n\t\td = d.toString(); // cast numbers\n\n\t\tif ( d.length <= cutoff ) {\n\t\t\treturn d\n\t\t}\n\n\t\tvar shortened = d.substr(0, cutoff-1)\n\n\t\t// Find the last white space character in the string\n\t\tif ( wordbreak ) {\n\t\t\tshortened = shortened.replace(/\\s([^\\s]*)$/, '')\n\t\t}\n\n\t\t// Protect against uncontrolled HTML input\n\t\tif ( escapeHtml ) {\n\t\t\tshortened = esc( shortened )\n\t\t}\n\n\t\treturn '<span class=\"ellipsis\" title=\"'+esc(d)+'\">'+shortened+'&#8230;</span>'\n\t}\n}\n\n\n\nmodule.exports.bookmarkTable = $('#bookmarks').DataTable({\n\t\n\tkeys: {\n\t\ttabIndex: 1,\n\t\tblurable: true,\n\t\tkeys: [ \t32, // space\n\t\t\t\t\t38, // up\n\t\t\t\t\t40  // down\n\t\t]\n\t},\n\tscrollY: \t'calc(100vh - 59px)', // window height - header - footer\n\tpaging: \tfalse,\n\tdom: 'ltipr', // hide default search field\n\tcolumns:\n\t[\n\t\t{title: 'ID'},\n\t\t{title: i18n.t('bookmarktable:header.title', 'Title')},\n\t\t{title: i18n.t('bookmarktable:header.description', 'Description')},\n\t\t{title: i18n.t('bookmarktable:header.url', 'Url')},\n\t\t{title: i18n.t('bookmarktable:header.created', 'Created')},\n\t\t{title: i18n.t('bookmarktable:header.modified', 'Modified')},\n\t\t{title: i18n.t('bookmarktable:header.tags', 'Tags')}\n\t],\n\tcolumnDefs:\n\t\t[\n\t\t\t{\n\t\t\t\ttargets: [ 0 ],\n\t\t\t\tvisible: false,\n\t\t\t\tsearchable: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tclassName: 'padded-left',\n\t\t\t\ttargets: [ 1 ]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttargets: [ 2 ],\n\t\t\t\tvisible: store.get('tableColumns.description')\n\t\t\t},\n\t\t\t{\n\t\t\t\ttargets: [ 3 ],\n\t\t\t\tvisible: store.get('tableColumns.url'),\n\t\t\t\trender: $.fn.dataTable.render.ellipsis( 50 )\n\t\t\t},\n\t\t\t{\n\t\t\t\ttargets: [ 4 ],\n\t\t\t\tvisible: store.get('tableColumns.created'),\n\t\t\t\tsearchable: false\n\t\t\t},\n\t\t\t{\n\t\t\t\ttargets: [ 5 ],\n\t\t\t\tvisible: store.get('tableColumns.modified'),\n\t\t\t\tsearchable: false\n\t\t\t},\n\t\t\t{ \tclassName: 'dt-body-right',\n\t\t\t\ttargets: [ 4, 5 ]\n\t\t\t},\n\t\t\t{\n\t\t\t\tclassName: 'dt-body-right padded-right',\n\t\t\t\ttargets: [ 6 ]\t\n\t\t\t}\n\t\t],\n\t\n\tlanguage: {\n\t\temptyTable: ' ',\n\t\tzeroRecords: i18n.t('bookmarktable:footer.zero', 'No matching Bookmarks were found'),\n\t\tinfo: i18n.t('bookmarktable:footer.info', 'Showing _TOTAL_ Bookmarks'),\n\t\tinfoEmpty: i18n.t('bookmarktable:footer.empty', 'Showing 0 to 0 of 0 Bookmarks'),\n\t\tinfoFiltered: i18n.t('bookmarktable:footer.filtered', '(filtered from _MAX_ Bookmarks)')\n\t}\n})\n"],"file":"../bookmark-table.min.js"}