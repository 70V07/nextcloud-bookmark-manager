{"version":3,"sources":["edit-bookmark.js"],"names":["remote","require","ipc","ipcRenderer","dialog","Store","store","$","urlParams","URLSearchParams","location","search","server","get","username","password","theId","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","getBookmark","editInit","method","headers","Authorization","btoa","Content-Type","mode","cache","fetch","then","response","ok","text","showErrorBox","closeModal","message","populateForm","JSON","parse","catch","error","console","log","bookmark","append","val","activeTags","allTags","i","length","indexOf","trigger","updateBookmark","query","record_id","url","title","description","tags","select2","send","getCurrentWindow","close","document","ready","theme","width","tokenSeparators","data","click","submit","e","preventDefault"],"mappings":"AAAA,aAEA,MAAMA,OAASC,QAAS,YAAaD,OAC/BE,IAAMD,QAAS,YAAaE,YAC5BC,OAASJ,OAAOI,OAEhBC,MAAQJ,QAAS,kBACjBK,MAAQ,IAAID,MAEZE,EAAIN,QAAS,UACnBA,QAAQ,UAARA,CAAmBM,GAEnB,MAAMC,UAAY,IAAIC,gBAAiBC,SAASC,QAMzCC,OAAWN,MAAMO,IAAK,2BAC3BC,SAAYR,MAAMO,IAAK,6BACvBE,SAAYT,MAAMO,IAAK,6BAMnBG,MAAQR,UAAUK,IAAI,MAK5B,IAAII,UAAY,SAAUC,GAEzB,MAAMC,KAEN,IAAM,IAAIC,KAAKF,EAETA,EAAIG,eAAeD,IAEvBD,EAAIG,KAAMC,mBAAmBH,GAAK,IAAMG,mBAAmBL,EAAIE,KAGjE,OAAOD,EAAIK,KAAK,MAOjB,SAASC,cAER,MAEMC,GAELC,OAAQ,MACRC,SACCC,cAAiB,SAAWC,KAAMhB,SAAW,IAAMC,UACnDgB,eAAgB,oBAEjBC,KAAM,OACNC,MAAO,WAIRC,MAAMtB,OAdU,qDAcSI,MAAOU,GAAUS,KAAK,SAASC,GAEvD,OAAIA,EAASC,GAELD,EAASE,QAIhBlC,OAAOmC,aACN,sBACA,uDAGDC,aACOJ,EAASE,UAGfH,KAAK,SAASM,GAEhBC,aAAcC,KAAKC,MAAOH,MAExBI,MAAM,SAASC,GAEjBC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,KAQd,SAASJ,aAAcO,GAEtB1C,EAAE,UAAU2C,OAAQD,EAAe,KAAS,OAC5C1C,EAAE,qBAAqB4C,IAAKF,EAAe,KAAO,KAClD1C,EAAE,uBAAuB4C,IAAKF,EAAe,KAAS,OACtD1C,EAAE,gCAAgC4C,IAAKF,EAAe,KAAe,aAKrE,IAAIG,KACJ,MAAMC,EAAU/C,MAAMO,IAAI,QAG1B,IAAK,IAAIyC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAG/BL,EAAe,KAAQ,KAAEO,QAASH,EAAQC,GAAS,OAAO,GAE7DF,EAAW9B,KAAM+B,EAAQC,GAAO,IAIlC/C,EAAE,SAAS4C,IAAKC,GAChB7C,EAAE,SAASkD,QAAS,UAOrB,SAASC,iBAER,IAAIC,EAAQ1C,WAEV2C,UAAa5C,MACb6C,IAAOtD,EAAE,qBAAqB4C,MAC9BW,MAASvD,EAAE,uBAAuB4C,MAClCY,YAAexD,EAAE,gCAAgC4C,QAGnD,MAAMa,EAAOzD,EAAE,SAAS0D,QAAQ,QAEhC,IAAK,IAAIX,EAAI,EAAGA,EAAIU,EAAKT,OAAQD,IAEhCK,GAAS,iBAAmBpC,mBAAmByC,EAAKV,GAAS,MAI9D,MAEM5B,GAELC,OAAQ,MACRC,SACCC,cAAiB,SAAWC,KAAMhB,SAAW,IAAMC,UACnDgB,eAAgB,oBAEjBC,KAAM,OACNC,MAAO,WAIRC,MAAMtB,OAdU,qDAcSI,MAAQ,IAAM2C,EAAOjC,GAAUS,KAAK,SAASC,GAErE,OAAIA,EAASC,GAELD,EAASE,QAIhBlC,OAAOmC,aACN,sBACA,uDAGDC,aACOJ,EAASE,UAGfH,KAAK,SAASM,GAEhBvC,IAAIgE,KAAK,UAAW,WACpB1B,eAEEK,MAAM,SAASC,GAEjBC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,KAQd,SAASN,aAEMxC,OAAOmE,mBACfC,QAKP7D,EAAE8D,UAAUC,MAAM,WAGjB/D,EAAE,SAAS0D,SACVM,MAAO,SACPC,MAAO,QACPR,MAAM,EACNS,iBAAkB,IAAI,KACtBC,KAAMpE,MAAMO,IAAI,UAGjBY,cAKAlB,EAAE,WAAWoE,MAAO,WAEnBnC,eAODjC,EAAE,eAAeqE,OAAQ,SAAUC,GAElCA,EAAEC,iBACFpB","file":"../edit-bookmark.min.js","sourcesContent":["'use strict'\n\nconst remote = require( 'electron' ).remote\nconst ipc = require( 'electron' ).ipcRenderer\nconst dialog = remote.dialog\n\nconst Store = require( 'electron-store' )\nconst store = new Store()\n\nconst $ = require( 'jquery' )\nrequire('select2')($)\n\nconst urlParams = new URLSearchParams( location.search )\n\n\n\n//note(@duncanmid): get login credentials\n\nconst \tserver \t\t= store.get( 'loginCredentials.server' ),\n\t\tusername \t= store.get( 'loginCredentials.username' ),\n\t\tpassword \t= store.get( 'loginCredentials.password' )\n\n\n\n//note(@duncanmid): bookmark id\n\nconst theId = urlParams.get('id')\n\n\n//note(@duncanmid): serialize object\n\nvar serialize = function( obj ) {\n\t\n\tconst str = []\n\t\n\tfor ( let p in obj )\n\t\n\t\tif ( obj.hasOwnProperty(p) ) {\n\t\t\t\n\t\t\tstr.push( encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]) )\n\t\t}\n\t\n\treturn str.join(\"&\")\n}\n\n\n\n//note(@duncanmid): get bookmark by ID\n\nfunction getBookmark() {\n\t\n\tconst editUrl = \"/index.php/apps/bookmarks/public/rest/v2/bookmark/\"\n\t\t\n\tconst editInit = {\n\t\t\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Authorization': 'Basic ' + btoa( username + ':' + password ),\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tmode: 'cors',\n\t\tcache: 'default'\n\t}\n\t\n\t\n\tfetch(server + editUrl + theId, editInit).then(function(response) {\n\t\t\n\t\tif (response.ok) {\n\t\t\t\n\t\t\treturn response.text()\n\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdialog.showErrorBox(\n\t\t\t\t'Edit Bookmark Error',\n\t\t\t\t`An error occured whilst trying to edit the bookmark`\n\t\t\t)\n\t\t\t\n\t\t\tcloseModal()\n\t\t\treturn response.text()\n\t\t}\n\t\n\t}).then(function(message) {\n\t\t\n\t\tpopulateForm( JSON.parse( message ) )\n\t\n\t}).catch(function(error) {\n\t\t\n\t\tconsole.log('ERROR')\n\t\tconsole.log(error)\n\t})\n}\n\n\n\n//note(@duncanmid): populate form\n\nfunction populateForm( bookmark ) {\n\t\n\t$('header').append( bookmark['item']['title'] )\n\t$('input[name=\"url\"]').val( bookmark['item']['url'] )\n\t$('input[name=\"title\"]').val( bookmark['item']['title'] )\n\t$('textarea[name=\"description\"]').val( bookmark['item']['description'] )\n\t\n\t//todo(@duncanmid): set any active tags\n\t\n\t//create blank array\n\tlet activeTags = []\n\tconst allTags = store.get('tags')\n\t//loop through store tags\n\t\n\tfor (var i = 0; i < allTags.length; i++) {\n\t\t\n\t\t//if tag in bookmark tags push id to blank array\t\n\t\tif( bookmark['item']['tags'].indexOf( allTags[i]['text'] ) > -1 ) {\n\t\t\t\n\t\t\tactiveTags.push( allTags[i]['id'] )\n\t\t}\n\t}\n\t\n\t$('#tags').val( activeTags )\n\t$('#tags').trigger( 'change' )\n}\n\n\n\n//note(@duncanmid): update function\n\nfunction updateBookmark() {\n\t\n\tlet query = serialize({\n\t\n\t\t\t'record_id': theId,\n\t\t\t'url': $('input[name=\"url\"]').val(),\n\t\t\t'title': $('input[name=\"title\"]').val(),\n\t\t\t'description': $('textarea[name=\"description\"]').val()\n\t\t})\n\t\n\tconst tags = $('#tags').select2('data')\n\t\n\tfor (var i = 0; i < tags.length; i++) {\n\t\t\t\n\t\tquery += '&item[tags][]=' + encodeURIComponent(tags[i]['text'])\n\t\t\t\n\t}\n\t\n\tconst editUrl = \"/index.php/apps/bookmarks/public/rest/v2/bookmark/\"\n\t\t\n\tconst editInit = {\n\t\t\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t'Authorization': 'Basic ' + btoa( username + ':' + password ),\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tmode: 'cors',\n\t\tcache: 'default'\n\t}\n\t\n\t\n\tfetch(server + editUrl + theId + '?' + query, editInit).then(function(response) {\n\t\t\n\t\tif (response.ok) {\n\t\t\t\n\t\t\treturn response.text()\n\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdialog.showErrorBox(\n\t\t\t\t'Edit Bookmark Error',\n\t\t\t\t`An error occured whilst trying to edit the bookmark`\n\t\t\t)\n\t\t\t\n\t\t\tcloseModal()\n\t\t\treturn response.text()\n\t\t}\n\t\n\t}).then(function(message) {\n\t\t\n\t\tipc.send('refresh', 'refresh')\n\t\tcloseModal()\t\n\t\n\t}).catch(function(error) {\n\t\t\n\t\tconsole.log('ERROR')\n\t\tconsole.log(error)\n\t})\n}\n\n\n\n//note(@duncanmid): close modal\n\nfunction closeModal() {\n\t\n\tconst modal = remote.getCurrentWindow()\n\tmodal.close()\n}\n\n\n\n$(document).ready(function() {\n\t\n\t\n\t$('#tags').select2({\n\t\ttheme: \"custom\",\n\t\twidth: '320px',\n\t\ttags: true,\n\t\ttokenSeparators: [',',';'],\n\t\tdata: store.get('tags')\n\t})\n\t\n\tgetBookmark()\n\t\n\t\n\t//note(@duncanmid): cancel modal\n\t\n\t$('#cancel').click( function() {\n\t\t\n\t\tcloseModal()\n\t})\n\t\n\t\n\t\n\t//note(@duncanmid): update data\n\t\n\t$('#modal-form').submit( function( e ) {\n\t\t\n\t\te.preventDefault()\n\t\tupdateBookmark()\t\n\t})\n})\n"]}