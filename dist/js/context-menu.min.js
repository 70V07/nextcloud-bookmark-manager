"use strict";const electron=require("electron"),{shell:shell,app:app,clipboard:clipboard}=require("electron"),dialog=require("electron").dialog,BrowserWindow=electron.BrowserWindow,Menu=electron.Menu,MenuItem=electron.MenuItem,ipc=electron.ipcMain,Store=require("electron-store"),store=new Store,applescript=require("applescript");function decodeEntities(e){return String(e).replace(/&lt;/g,"<").replace(/&gt;/g,">")}ipc.on("show-bookmark-menu",(e,t)=>{let o=decodeEntities(t[1]);const l=[{label:`Open ${o} in Default Browser`,click(){require("electron").shell.openExternal(t[3])}},{label:`Open ${o} with…`,submenu:[]},{label:`Copy ${o} url to Clipboard`,click(){clipboard.writeText(t[3],o)}},{type:"separator"},{label:`Edit ${o} Bookmark…`,click(e,o){o&&o.webContents.send("edit-bookmark",t)}},{label:`Delete ${o} Bookmark…`,click(e,o){o&&o.webContents.send("delete-bookmark",t)}}],r=store.get("browsers");for(let e=0,o=r.length;e<o;e++){let o=r[e].name,n=`tell application "${o}"\n\t\t\topen location "${t[3]}"\n\t\tend tell\n\t\ttell application "System Events"\n\t\t\ttell application process "${o}"\n\t\t\tset frontmost to true\n\t\t\tend tell\n\t\tend tell`;l[1].submenu.push({label:o,click(){applescript.execString(n,function(e,l){e&&(dialog.showErrorBox(`Error launching: ${o}`,`the url ${t[3]} could not be opened`),console.log(e))})}})}const n=Menu.buildFromTemplate(l),i=BrowserWindow.fromWebContents(e.sender);n.popup(i)});
//# sourceMappingURL=maps/context-menu.min.js.map
