"use strict";const remote=require("electron").remote,{ipcRenderer:ipcRenderer}=require("electron"),fs=require("fs-extra"),Store=require("electron-store"),store=new Store,dialog=remote.dialog,server=store.get("loginCredentials.server"),username=store.get("loginCredentials.username"),password=store.get("loginCredentials.password");let today=(new Date).toISOString().slice(0,10),serverName=server.replace(/^(?:https?:\/\/)?(?:www\.)?/i,"").split("/")[0];const exportProcess=remote.getCurrentWindow(),exportPath=store.get("exportPath")+`/${serverName} Bookmarks (${today}).html`;let bookmarks='<!DOCTYPE NETSCAPE-Bookmark-file-1>\n<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8">\n<TITLE>Bookmarks</TITLE>\n<H1>Bookmarks</H1>\n<DL><p>';function getBookmarks(){let e={method:"GET",headers:{Authorization:"Basic "+btoa(username+":"+password),"Content-Type":"application/json"},mode:"cors",cache:"default"};fetch(server+"/index.php/apps/bookmarks/public/rest/v2/bookmark?page=-1",e).then(function(e){if(e.ok)return console.log("response OK"),e.text();dialog.showErrorBox("Server connection error",`there was an error connecting to:\n${server}`),console.log(e.error())}).then(function(e){let o=JSON.parse(e);"error"==o.status?(dialog.showErrorBox("JSON parsing error","An error occured parsing the bookmarks"),console.log(o.message)):outputBookmarks(o.data)}).catch(function(e){dialog.showErrorBox("Server connection error",`there was an error connecting to:\n${server}`),console.log(e)})}function outputBookmarks(e){for(let o of e){let e=o.tags.toString();bookmarks+=`\n<DT><A HREF="${o.url}" TAGS="${e}">${o.title}</A>`,o.description&&(bookmarks+=`<DD>${o.description}`)}fs.outputFile(exportPath,bookmarks).then(()=>fs.readFile(exportPath,"utf8")).then(e=>{new Notification("Export Successful",{body:"The bookmarks have been exported."}).onclick=(()=>{exportProcess.close()})}).catch(e=>{console.error(e),new Notification("Export Failed",{body:"An error occured exporting the bookmarks."}).onclick=(()=>{exportProcess.close()})})}getBookmarks();
//# sourceMappingURL=maps/export-bookmarks.min.js.map
